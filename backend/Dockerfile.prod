# Production Dockerfile for Backend

# ---- Builder Stage ----
FROM node:20-alpine AS builder
WORKDIR /usr/src/app

# Copy root package.json (for npm workspaces)
COPY package.json package-lock.json* ./

# Copy backend package.json
COPY backend/package.json ./backend/

# Install all dependencies from workspace root
RUN npm install

# Copy backend source code
COPY backend/ ./backend/

# Generate Prisma Client if schema exists
RUN if [ -f "./backend/prisma/schema.prisma" ]; then \
      cd backend && npx prisma generate; \
    fi

# Build the NestJS application
RUN cd backend && npm run build

# ---- Production Stage ----
FROM node:20-alpine
WORKDIR /usr/src/app

# Copy root package.json (for workspace configuration)
COPY package.json package-lock.json* ./
COPY backend/package.json ./backend/

# Install production dependencies
RUN npm install --omit=dev

# Copy built application from builder stage
COPY --from=builder /usr/src/app/backend/dist ./backend/dist

# Copy Prisma schema
COPY --from=builder /usr/src/app/backend/prisma/ ./backend/prisma/

# Copy Prisma generated client (it's generated to ./generated/prisma)
COPY --from=builder /usr/src/app/backend/generated/ ./backend/generated/

# Expose the port the app runs on
EXPOSE 3000

# Set working directory to backend
WORKDIR /usr/src/app/backend

# Start the app
CMD ["node", "dist/src/main.js"]