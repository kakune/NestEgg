services:
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: nestegg_e2e
      POSTGRES_USER: e2e_user
      POSTGRES_PASSWORD: e2e_password
    ports:
      - '5433:5432'  # Different port to avoid conflicts
    volumes:
      - e2e_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U e2e_user -d nestegg_e2e"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile.prod
    environment:
      DATABASE_URL: "postgresql://e2e_user:e2e_password@db:5432/nestegg_e2e?schema=public"
      NODE_ENV: test
      PORT: 3000
      SESSION_SECRET: e2e-session-secret
      JWT_SECRET: e2e-jwt-secret
    ports:
      - '3001:3000'  # Different port to avoid conflicts
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000/healthz"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        echo 'Running database migrations...' &&
        npx prisma migrate deploy &&
        echo 'Seeding test data...' &&
        npx prisma db seed &&
        echo 'Starting application...' &&
        node dist/main.js
      "

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile.prod
    ports:
      - '8080:80'  # Different port to avoid conflicts
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s
    environment:
      - VITE_API_BASE_URL=http://localhost:3001/api/v1

volumes:
  e2e_postgres_data: